{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","Filter","value","onChange","PersonForm","props","add","phone","handleNameChange","handlePhoneChange","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","id","delete","console","log","newObject","put","Notification","notification","className","message","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNotification","filter","setFilter","useEffect","personService","initData","addNotification","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","existedPerson","find","p","window","confirm","changedPerson","savedPerson","catch","error","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42fb295a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({persons, deletePerson}) => {\n    return persons.map(person => {\n        return <div key={person.name}>\n            {person.name} {person.number}\n            <button key={person} onClick={() => deletePerson(person)}>delete</button>\n        </div>\n    })\n}\n\nexport default Persons","import React from \"react\";\n\nconst Filter = ({value, onChange}) => {\n    return (\n        <form>\n            <div>filter shown with <input value={value} onChange={onChange}/></div>\n        </form>\n    )\n}\n\nexport default Filter","import React from \"react\";\n\nconst PersonForm = (props) => {\n    const {add, name, phone, handleNameChange, handlePhoneChange} = props\n    return (\n        <form onSubmit={add}>\n            <div>name: <input value={name} onChange={handleNameChange}/></div>\n            <div>number: <input value={phone} onChange={handlePhoneChange}/></div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import axios from \"axios\";\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => console.log(response))\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, deletePerson, update}\n","import React from \"react\";\n\nconst Notification = ({notification}) => {\n    if (notification === null) {\n        return null\n    }\n\n    return (\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React, {useEffect, useState} from 'react'\nimport Persons from \"./components/Persons\"\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport personService from \"./services/persons\"\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [notification, setNotification] = useState(null)\n    const [filter, setFilter] = useState('')\n\n    useEffect(() => {\n        personService.getAll()\n            .then(initData => setPersons(initData))\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const existedPerson = persons.find(p => p.name === newName)\n        if (existedPerson) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const changedPerson = {...existedPerson, number: newNumber}\n                personService.update(existedPerson.id, changedPerson)\n                    .then(savedPerson => {\n                        setPersons(persons.map(person => person.id !== existedPerson.id ? person : savedPerson))\n                        addNotification({message: `Update number of ${savedPerson.name}`, type: 'notification'})\n                    })\n                    .catch(error => {\n                        addNotification({\n                            message: `${error.response.data.error}`,\n                            type: 'error'\n                        })\n                    })\n            }\n        } else {\n            const newPerson = {\n                name: newName,\n                number: newNumber,\n            }\n            personService.create(newPerson)\n                .then(savedPerson => {\n                    setPersons(persons.concat(savedPerson))\n                    addNotification({message: `Added ${savedPerson.name}`, type: 'notification'})\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    addNotification({\n                        message: `${error.response.data.error}`,\n                        type: 'error'\n                    })\n                })\n        }\n    }\n\n    const addNotification = (notification) => {\n        setNotification(notification)\n        setTimeout(() => setNotification(null), 3000)\n    }\n\n    const deletePerson = (person) => {\n        if (window.confirm(`Delete ${person.name}`)) {\n            personService.deletePerson(person.id)\n                .catch(() => {\n                    alert(`${person.name} was already deleted from server`)\n                })\n                .then(() => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n        }\n    }\n\n    const handlePersonNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handlePersonPhoneChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilter = (event) => {\n        setFilter(event.target.value)\n    }\n\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification}/>\n            <Filter value={filter} onChange={handleFilter}/>\n            <h2>add a new </h2>\n            <PersonForm\n                add={addPerson}\n                name={newName}\n                phone={newNumber}\n                handleNameChange={handlePersonNameChange}\n                handlePhoneChange={handlePersonPhoneChange}/>\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} deletePerson={deletePerson}/>\n        </div>\n    )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}